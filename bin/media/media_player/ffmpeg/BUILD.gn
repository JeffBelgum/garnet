# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD - style license that can be
# found in the LICENSE file.

source_set("ffmpeg") {
  sources = [
    "av_codec_context.cc",
    "av_codec_context.h",
    "av_format_context.h",
    "av_frame.h",
    "av_io_context.cc",
    "av_io_context.h",
    "av_packet.h",
    "ffmpeg_audio_decoder.cc",
    "ffmpeg_audio_decoder.h",
    "ffmpeg_decoder.cc",
    "ffmpeg_decoder.h",
    "ffmpeg_decoder_base.cc",
    "ffmpeg_decoder_base.h",
    "ffmpeg_demux.cc",
    "ffmpeg_demux.h",
    "ffmpeg_formatting.cc",
    "ffmpeg_formatting.h",
    "ffmpeg_init.cc",
    "ffmpeg_init.h",
    "ffmpeg_video_decoder.cc",
    "ffmpeg_video_decoder.h",
    "ffmpeg_video_frame_layout.cc",
    "ffmpeg_video_frame_layout.h",
    "lpcm_util.cc",
    "lpcm_util.h",
  ]

  public_deps = [
    ":prebuilt_ffmpeg",
  ]

  deps = [
    "//garnet/bin/media/media_player/decode",
    "//garnet/bin/media/media_player/demux",
    "//garnet/bin/media/media_player/framework",
    "//garnet/bin/media/media_player/util",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/media/fidl",
    "//garnet/public/lib/media/timeline",
    "//zircon/public/lib/trace",
  ]

  defines = [
    "FF_API_PIX_FMT_DESC=0",
    "FF_API_OLD_DECODE_AUDIO=0",
    "FF_API_DESTRUCT_PACKET=0",
    "FF_API_GET_BUFFER=0",
    "FF_API_CONVERGENCE_DURATION=0",
  ]
}

group("prebuilt_ffmpeg") {
  deps = [
    ":prebuilt_ffmpeg_copy",
  ]

  public_configs = [ ":prebuilt_ffmpeg_config" ]
}

config("prebuilt_ffmpeg_config") {
  visibility = [ ":prebuilt_ffmpeg" ]

  prebuilt_ffmpeg_base = "prebuilt/${target_cpu}/"
  if (target_cpu == "x64") {
    ffmpeg_config = "max"
  } else {
    ffmpeg_config = "default"
  }

  include_dirs = [
    prebuilt_ffmpeg_base,
    prebuilt_ffmpeg_base + "/fuchsia/config/" + ffmpeg_config + "/" +
        target_cpu,
  ]

  ldflags = [ "${target_cpu}-shared/libffmpeg.so" ]
}

copy("prebuilt_ffmpeg_copy") {
  visibility = [ ":prebuilt_ffmpeg" ]

  sources = [
    "prebuilt/$target_cpu/libffmpeg.so",
  ]
  outputs = [
    "$root_out_dir/${target_cpu}-shared/libffmpeg.so",
  ]
}
