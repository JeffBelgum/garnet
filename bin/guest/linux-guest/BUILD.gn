# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//garnet/bin/guest/guest.gni")

if (target_cpu == "arm64") {
  linux_platform = "arm64"
} else if (current_cpu == "x64") {
  linux_platform = "x86"
}

linux_dir = "$target_out_dir/linux/source"
sysroot_dir = "$target_out_dir/linux/sysroot"
linux_image = "$target_out_dir/linux/Image"
disk_image = "$target_out_dir/linux/disk.img"
initrd_image = "$target_out_dir/linux/initrd.img"

# Build a simple toybox sysroot that is packaged both as an initrd and
# as an ext2 filesystem image.
action("sysroot") {
  visibility = [ ":*" ]

  script = "//garnet/bin/guest/scripts/mksysroot.sh"
  args = [
    "-r",
    "-p",
    rebase_path("$disk_image"),
    "-i",
    "-o",
    rebase_path("$initrd_image"),
    "-d",
    rebase_path("$sysroot_dir/toybox"),
    "-s",
    rebase_path("$sysroot_dir/dash"),
    "$linux_platform",
  ]

  outputs = [
    disk_image,
    initrd_image,
  ]
}

action("kernel") {
  visibility = [ ":*" ]

  script = "//garnet/bin/guest/scripts/mklinux.sh"
  args = [
    "-l",
    rebase_path("$linux_dir"),
    "-o",
    rebase_path("$linux_image"),
    "$linux_platform",
  ]

  outputs = [
    linux_image,
  ]
}

guest_app("linux-guest") {
  deps = [
    ":sysroot",
    ":kernel",
  ]

  if (target_cpu == "arm64") {
    cmdline = "earlycon=pl011,0xfff32000 console=ttyAMA0 console=tty0"
  } else if (current_cpu == "x64") {
    cmdline = "earlycon=uart,io,0x3f8 console=ttyS0 console=tty0 io_delay=none clocksource=tsc"
  }

  kernel = linux_image
  ramdisk = initrd_image

  disk_name = "filesystem.img"
  resources = [ {
        path = rebase_path(disk_image)
        dest = "${disk_name}"
      } ]
  block_devices = [ "/pkg/data/${disk_name},ro" ]
}
