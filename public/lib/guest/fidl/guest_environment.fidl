// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library guest;

using component;

struct GuestLaunchInfo {
  // The URL of the package to launch.
  string url;

  // Arguments that will be passed to the vmm binary when launching this guest.
  //
  // See //garnet/bin/guest/vmm/guest_config.cc for valid options.
  vector<string>? vmm_args;

  // A diagnostic string to associate with this instance.
  string? label;

  // A flat namespace to be appended to the default namespace for the vmm
  // process.
  component.FlatNamespace? flat_namespace;
};

interface GuestEnvironment {
  // Launch a new guest instance into this environment.
  1: LaunchGuest(GuestLaunchInfo launch_info,
                 request<GuestController>? controller);

  // Retrieve the host vsock endpoint for this environment. This can be used
  // to listen for requests to open host ports, or to connect to guest ports.
  2: GetSocketEndpoint(request<SocketEndpoint> socket_endpoint);

  // Query for guests running in this environment.
  3: ListGuests() -> (vector<GuestInfo> env_infos);

  // Connect to a currently running guest instance identified via |id|. The
  // |id| can be found via a call to |ListGuests|.
  4: ConnectToGuest(uint32 id, request<GuestController> controller);
};
